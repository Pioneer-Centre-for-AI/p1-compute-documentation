layout_uv() {
    # reference: https://github.com/direnv/direnv/wiki/Python#uv
    local project_root="$(pwd)"
    local venv_path="${project_root}/.venv"

    if [[ ! -d "${venv_path}" ]]; then
        log_status "Creating virtual environment..."
        uv venv "${venv_path}"
    fi

    VIRTUAL_ENV="${venv_path}"
    PATH_add "${VIRTUAL_ENV}/bin"
    export UV_ACTIVE=1
    export VIRTUAL_ENV
    export PYTHONPATH="${project_root}:${PYTHONPATH}"

    # Generate requirements.txt from pyproject.toml if it doesn't exist or is older than pyproject.toml
    if [[ ! -f "${project_root}/requirements.txt" ]] || [[ "${project_root}/pyproject.toml" -nt "${project_root}/requirements.txt" ]]; then
        log_status "Generating requirements.txt from pyproject.toml..."
        uv pip compile "${project_root}/pyproject.toml" -o "${project_root}/requirements.txt"
    fi

    # Install project dependencies if not already installed
    if ! python -c "import p1_compute_documentation" 2>/dev/null; then
        log_status "Installing project dependencies..."
        uv pip install -e .
    fi
}

# Set up Python virtual environment first
layout uv

# Then use Nix flake if available
if command -v nix >/dev/null 2>&1; then
  use flake
fi
